/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crop_prediction;

//import javafx.scene.control.Alert;

import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

//import javafx.scene.control.Alert.AlertType;

/**
 *
 * @author DellUser
 */
public class SensorList extends javax.swing.JFrame {
    String u_ph,u_temp,u_region,u_ec,u_days;
    float uf_ph,uf_temp,uf_region,uf_ec,uf_days;
    
    public SensorList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        temp = new javax.swing.JCheckBox();
        EC = new javax.swing.JCheckBox();
        ph = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        text_temp = new javax.swing.JTextField();
        text_ph = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        text_ec = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        text_days = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        menu_state = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Sensors From Below List");

        temp.setText("Temperature");
        temp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempActionPerformed(evt);
            }
        });

        EC.setText("EC");
        EC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ECActionPerformed(evt);
            }
        });

        ph.setText("ph");
        ph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EC)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ph)
                        .addGap(64, 64, 64)
                        .addComponent(temp)))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temp)
                    .addComponent(ph))
                .addGap(32, 32, 32)
                .addComponent(EC)
                .addContainerGap(179, Short.MAX_VALUE))
        );

        jLabel2.setText("Tempreture");

        text_ph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_phActionPerformed(evt);
            }
        });

        jLabel3.setText("phValue of soil");

        jLabel4.setText("EC of soil");

        text_days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_daysActionPerformed(evt);
            }
        });

        jLabel5.setText("No of days");

        menu_state.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "East India", "West India", "South India", "North India", " " }));

        jLabel6.setText("Location");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menu_state, 0, 147, Short.MAX_VALUE)
                    .addComponent(text_days)
                    .addComponent(text_ec)
                    .addComponent(text_ph))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(text_temp, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(140, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_ph, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_ec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_days, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menu_state, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(text_temp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(305, Short.MAX_VALUE)))
        );

        jButton1.setText("Ok");
        jButton1.setActionCommand("Button_ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(jLabel1)
                .addContainerGap(219, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(244, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(214, 214, 214))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempActionPerformed
       if(temp.isEnabled())
        {
            text_temp.setEditable(false);
     
        }
       if(!temp.isEnabled())
        {
            text_temp.setEditable(true);            
        }
     
        
    }//GEN-LAST:event_tempActionPerformed

    private void ECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ECActionPerformed
    
         if(EC.isEnabled())
        {
            text_ec.setEditable(false);
     
        }
       if(!EC.isEnabled())
        {
            text_ec.setEditable(true);
            
        }
     
    }//GEN-LAST:event_ECActionPerformed

    private void text_phActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_phActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_phActionPerformed

    private void text_daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_daysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_daysActionPerformed

    private void phActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phActionPerformed
        if(ph.isEnabled())
        {
            text_ph.setEditable(false);
     
        }
       if(!ph.isEnabled())
        {
            text_ph.setEditable(true);
            
        }
     
        
    }//GEN-LAST:event_phActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      int flag = 0;
      String last=new String();
      if(!ph.isEnabled())
       {
           if(text_ph.getText().equals(""))
           {
                flag = 1;
                
           }
           else
           {
               u_ph=text_ph.getText();
               uf_ph=Float.parseFloat(u_ph);
               
           }
       }
      
      if(!temp.isEnabled())
       {
           if(text_temp.getText().equals(""))
           {
               flag = 1;
             
               
           }
           else
           {
               u_temp=text_temp.getText();
               uf_temp=Float.parseFloat(u_temp);
               
                
               
           }
       }
      
      if(!EC.isEnabled())
       {
           if(text_ec.getText().equals(""))
           {
               flag = 1;
              
           }
           else
           {
                u_ec=text_ec.getText();
               uf_ec=Float.parseFloat(u_ec);
               
           }
       }
      
      if(temp.isEnabled())
      {
          try {
              String strFile = "/E:/final.csv";
              String strFile2="/E:/final.csv";
              CSVReader reader = new CSVReader(new FileReader(strFile));
              String [] nextLine;
              
              int lineNumber = 0;
              while ((nextLine = reader.readNext()) != null) 
              {
                  lineNumber++;
              }
              
              CSVReader reader2 = new CSVReader(new FileReader(strFile2));
              int lineC=0;
              int i=0;
              String[] Temp=new String[lineNumber];
              String [] nextLine2;
              
              
              while ((nextLine2 = reader2.readNext()) != null) 
              {
                  
                  //System.out.println("Line # " + lineC);
                  Temp[lineC]=nextLine2[1];                
                  lineC++;
                  
              }
              for(i=0;i<lineC;i++);             
              last=Temp[i-1];
              System.out.println("Last"+last);
              
          } catch (FileNotFoundException ex) {
              Logger.getLogger(SensorList.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(SensorList.class.getName()).log(Level.SEVERE, null, ex);
          }
      }
      
        //text_temp.setText(last);
        float pHvalue= Float.parseFloat(text_ph.getText());
        float Temp=Float.parseFloat(last);
        int EC=Integer.parseInt(text_ec.getText());
        int Months=Integer.parseInt(text_days.getText());
        int region=1;
       
        
        //pHvalue
        if(pHvalue< 3.5)
        {
            pHvalue=1;
        }
        else if(pHvalue>= 3.5 && pHvalue < 4.5)
        {
            pHvalue=2;
        }
         else if(pHvalue>=4.5 && pHvalue <= 5.0)
        {
            pHvalue=3;
        }
         else if(pHvalue>=5.1&& pHvalue <= 5.5)
        {
            pHvalue=4;
        }
          else if(pHvalue>=5.6&& pHvalue <= 6.0)
        {
            pHvalue=5;
        }
           else if(pHvalue>=6.1&& pHvalue <= 6.5)
        {
            pHvalue=6;
        }
           else if(pHvalue>=6.6&& pHvalue <= 7.3)
        {
            pHvalue=7;
        }
           else if(pHvalue>=7.4&& pHvalue <= 7.8)
        {
            pHvalue=8;
        }
        
        //EC
        if(EC>=0.8 && EC<1)
        {
            EC=1;
        }
        else if(EC>=1 && EC<1.2)
        {
            EC=2;
        }
         else if(EC>=1.2 && EC<1.4)
        {
            EC=3;
        }
         else if(EC>=1.4 && EC<1.6)
        {
            EC=4;
        }
         else if(EC>=1.6 && EC<1.8)
        {
            EC=5;
        }
         else if(EC>=1.8 && EC<2)
        {
            EC=6;
        }
         else if(EC>=2 && EC<2.2)
        {
            EC=7;
        }
         else if(EC>=2.2 && EC<2.4)
        {
            EC=8;
        }
         else if(EC>=2.4 && EC<2.6)
        {
            EC=9;
        }
         else if(EC>=2.6 && EC<2.8)
        {
            EC=10;
        }
         else if(EC>=2.8 && EC<3)
        {
            EC=11;
        }
        
        //region
        
        if(menu_state.getSelectedIndex()==0)
        {
            region=1;
        }
        else if(menu_state.getSelectedIndex()==1)
        {
            region=2;
        }
        else if(menu_state.getSelectedIndex()==2)
        {
            region=3;
        }
        else if(menu_state.getSelectedIndex()==3)
        {
            region=4;
        }
        
        //System.out.println(region+)
        //Creating CSV
        File file = new File("E:/trail.csv"); 
    try { 
        // create FileWriter object with file as parameter 
        FileWriter outputfile = new FileWriter(file); 
  
        // create CSVWriter object filewriter object as parameter 
        CSVWriter writer = new CSVWriter(outputfile); 
  
        // adding header to csv 
        String[] header = { "pHvalue", "Temp", "EC","Months","Region" }; 
        writer.writeNext(header); 
  
        // add data to csv 
        String p= Float.toString(pHvalue);
        String t= Float.toString(Temp);
        String ec=Integer.toString(EC);
        String m=Integer.toString(Months);
        String d =Integer.toString(region);
        
        String[] data1 = { p,t,ec,m,d }; 
        writer.writeNext(data1); 
        
  
        // closing writer connection 
        writer.close(); 
    } 
    catch (IOException e) { 
        // TODO Auto-generated catch block 
        e.printStackTrace();
    }
        
        
         
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SensorList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SensorList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SensorList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SensorList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SensorList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox EC;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox menu_state;
    private javax.swing.JCheckBox ph;
    private javax.swing.JCheckBox temp;
    private javax.swing.JTextField text_days;
    private javax.swing.JTextField text_ec;
    private javax.swing.JTextField text_ph;
    private javax.swing.JTextField text_temp;
    // End of variables declaration//GEN-END:variables
}
